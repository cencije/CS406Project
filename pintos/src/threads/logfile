<<<<<<< HEAD
qemu-system-i386 -hda /tmp/eCxzJvGdnr.dsk -m 4 -net none -serial stdio
=======
<<<<<<< HEAD
qemu-system-i386 -hda /tmp/V_dI4LYnOL.dsk -m 4 -net none -serial stdio
=======
qemu-system-i386 -hda /tmp/ByzaydV9tt.dsk -m 4 -net none -serial stdio
>>>>>>> 7d86e07b225d3e995abd37b88df45c151d6dceb5
>>>>>>> b4e388266cadad87b3bd5a976dd153349ecaa43a
PiLo hda1
Loading...........
Kernel command line: run alarm-multiple
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
<<<<<<< HEAD
Thread Tick # 1Calibrating timer...  Thread Tick # 2Thread Tick # 3Thread Tick # 4Thread Tick # 5Thread Tick # 6Thread Tick # 7Thread Tick # 8Thread Tick # 9Thread Tick # 10Thread Tick # 11Thread Tick # 12Thread Tick # 13Thread Tick # 14Thread Tick # 15Thread Tick # 16Thread Tick # 17Thread Tick # 18Thread Tick # 19Thread Tick # 20Thread Tick # 21Thread Tick # 22Thread Tick # 23Thread Tick # 24Thread Tick # 25Thread Tick # 26Thread Tick # 27Thread Tick # 28Thread Tick # 29Thread Tick # 30Thread Tick # 31Thread Tick # 32Thread Tick # 33Thread Tick # 34Thread Tick # 35Thread Tick # 36Thread Tick # 37Thread Tick # 38Thread Tick # 39Thread Tick # 40Thread Tick # 41Thread Tick # 42Thread Tick # 43Thread Tick # 44Thread Tick # 45Thread Tick # 46Thread Tick # 47Thread Tick # 48Thread Tick # 49Thread Tick # 50Thread Tick # 51Thread Tick # 52Thread Tick # 53Thread Tick # 54Thread Tick # 55432,537,600 loops/s.
=======
<<<<<<< HEAD
Calibrating timer...  392,806,400 loops/s.
>>>>>>> b4e388266cadad87b3bd5a976dd153349ecaa43a
Boot complete.
Executing 'alarm-multiple':
(alarm-multiple) begin
(alarm-multiple) Creating 5 threads to sleep 7 times each.
(alarm-multiple) Thread 0 sleeps 10 ticks each time,
(alarm-multiple) thread 1 sleeps 20 ticks each time, and so on.
<<<<<<< HEAD
(alarm-multiple) If successful, product of iteratioThread Tick # 56n count and
(alarm-multiple) sleep duration will appear in nondescending order.
Called Sleep Setter
Kernel PANIC at ../../threads/thread.c:303 in thread_current(): assertion `t->status == THREAD_RUNNING' failed.
Call stack: 0xc002776b.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
=======
(alarm-multiple) If successful, product of iteration count and
(alarm-multiple) sleep duration will appear in nondescending order.
(alarm-multiple) thread 0: duration=10, iteration=1, product=10
(alarm-multiple) thread 0: duration=10, iteration=2, product=20
(alarm-multiple) thread 1: duration=20, iteration=1, product=20
(alarm-multiple) thread 2: duration=30, iteration=1, product=30
(alarm-multiple) thread 0: duration=10, iteration=3, product=30
(alarm-multiple) thread 0: duration=10, iteration=4, product=40
(alarm-multiple) thread 1: duration=20, iteration=2, product=40
(alarm-multiple) thread 3: duration=40, iteration=1, product=40
(alarm-multiple) thread 4: duration=50, iteration=1, product=50
(alarm-multiple) thread 0: duration=10, iteration=5, product=50
(alarm-multiple) thread 0: duration=10, iteration=6, product=60
(alarm-multiple) thread 1: duration=20, iteration=3, product=60
(alarm-multiple) thread 2: duration=30, iteration=2, product=60
(alarm-multiple) thread 0: duration=10, iteration=7, product=70
(alarm-multiple) thread 3: duration=40, iteration=2, product=80
(alarm-multiple) thread 1: duration=20, iteration=4, product=80
(alarm-multiple) thread 2: duration=30, iteration=3, product=90
(alarm-multiple) thread 4: duration=50, iteration=2, product=100
(alarm-multiple) thread 1: duration=20, iteration=5, product=100
(alarm-multiple) thread 1: duration=20, iteration=6, product=120
(alarm-multiple) thread 2: duration=30, iteration=4, product=120
(alarm-multiple) thread 3: duration=40, iteration=3, product=120
(alarm-multiple) thread 1: duration=20, iteration=7, product=140
(alarm-multiple) thread 4: duration=50, iteration=3, product=150
(alarm-multiple) thread 2: duration=30, iteration=5, product=150
(alarm-multiple) thread 3: duration=40, iteration=4, product=160
(alarm-multiple) thread 2: duration=30, iteration=6, product=180
(alarm-multiple) thread 4: duration=50, iteration=4, product=200
(alarm-multiple) thread 3: duration=40, iteration=5, product=200
(alarm-multiple) thread 2: duration=30, iteration=7, product=210
(alarm-multiple) thread 3: duration=40, iteration=6, product=240
(alarm-multiple) thread 4: duration=50, iteration=5, product=250
(alarm-multiple) thread 3: duration=40, iteration=7, product=280
(alarm-multiple) thread 4: duration=50, iteration=6, product=300
(alarm-multiple) thread 4: duration=50, iteration=7, product=350
(alarm-multiple) end
Execution of 'alarm-multiple' complete.
=======
Unexpected interrupt 0x0e (#PF Page-Fault Exception)
Unexpected interrupt 0x0e (#PF Page-Fault Exception)
Unexpected interrupt 0x0e (#PF Page-Fault Exception)
Unexpected interrupt 0x0e (#PF Page-Fault Exception)
Unexpected interrupt 0x0e (#PF Page-Fault Exception)
Unexpected interrupt 0x0e (#PF Page-Fault Exception)
Unexpected interrupt 0x0e (#PF Page-Fault Exception)
Unexpected interrupt 0x0e (#PF Page-Fault Exception)
Unexpected interrupt 0x0e (#PF Page-Fault Exception)
Unexpected interrupt 0x0e (#PF Page-Fault Exception)
Unexpected interrupt 0x0e (#PF Page-Fault Exception)
Unexpected interrupt 0x0e (#PF Page-Fault Exception)
Unexpected interrupt 0x0e (#PF Page-Fault Exception)
Unexpected interrupt 0x0e (#PF Page-Fault Exception)
Unexpected interrupt 0x0e (#PF Page-Fault Exception)
Unexpected interrupt 0x0e (#PF Page-Fault Exception)
Unexpected interrupt 0x0e (#PF Page-Fault Exception)
Unexpected interrupt 0x0e (#PF Page-Fault Exception)
Unexpected interrupt 0x0e (#PF Page-Fault Exception)
Unexpected interrupt 0x0e (#PF Page-Fault Exception)
Unexpected interrupt 0x0e (#PF Page-Fault Exception)
Unexpected interrupt 0x0e (#PF Page-Fault Exception)
Unexpected interrupt 0x0e (#PF Page-Fault Exception)
Unexpected interrupt 0x0e (#PF Page-Fault Exception)
>>>>>>> 7d86e07b225d3e995abd37b88df45c151d6dceb5
>>>>>>> b4e388266cadad87b3bd5a976dd153349ecaa43a
